"""
Django settings for UCSD_IMM_beta4 project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/

"""

import os
import sys

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


""" UCSD IMM System-specific settings """
# Notice:
# You must install https://github.com/ottoyiu/django-cors-headers
# The folder or file name "Media" should not appear more than once in a path.
# You must install pytz

APACHE_USERNAME = "www-data" # This is intended for Ubuntu.

# UCSD IMM System URL path

import getpass

if getpass.getuser() == APACHE_USERNAME:
    UCSD_IMM_URL_PATH = "/UCSD_IMM"
else:
    UCSD_IMM_URL_PATH = ""

""" Works only in R.S. environment in Linux """
os.environ["RS_CONFIG_DIR"]   = "/home/rsaito/Work/Config"
os.environ["RS_DESKTOP_DIR"]  = "/home/rsaito/Desktop"
os.environ["RS_INTERMED_DIR"] = "/home/rsaito/Work/InterMed"
os.environ["RS_LOG_DIR"]      = "/home/rsaito/Work/Log"
os.environ["RS_PROG_DIR"]     = "/home/rsaito/rs_Progs"
os.environ["RS_PROJ_DIR"]     = "/home/rsaito/Work/Project"
os.environ["RS_PUBDATA_DIR"]  = "/home/rsaito/PubData"
os.environ["RS_TMP_DIR"]      = "/home/rsaito/Desktop/TMPArea"
os.environ["RS_TRUNK_DIR"]    = "/home/rsaito/Documents/WORK_trunk2_6"

for ipath in ("/home/rsaito/rs_Progs/rs_Python/rs_Python_Pack3/General_Packages",
              "/home/rsaito/rs_Progs/rs_Python/rs_Python_Pack3",
              "/home/rsaito/rs_Progs/rs_Python",
              "/Users/rsaito/UNIX/rs_Progs/rs_Python/rs_Python_Pack3/General_Packages",
              "/Users/rsaito/UNIX/rs_Progs/rs_Python/rs_Python_Pack3",
              "/Users/rsaito/UNIX/rs_Progs/rs_Python",):
    if ipath not in sys.path:
        sys.path.insert(1, ipath) # Insert as a second element.


# UCSD IMM database folder

UCSD_IMM_DB = "UCSD_IMM_DB"
    
# UCSD IMM System Authentication

LOGIN_URL = UCSD_IMM_URL_PATH + "/login/"

# UCSD IMM System-specific. Variable name must be capital letters.

UCSD_IMM_WORKDIR = os.path.join(BASE_DIR, "UCSD_IMM_WorkSpace")


# UCSD IMM System-specific. Variable name must be capital letters.
UCSD_IMM_INFOTRANSFDIR = os.path.join(UCSD_IMM_WORKDIR, "InfoTransf")

# UCSD IMM System-specific. Variable name must be capital letters.

UCSD_IMM_LOGDIR = os.path.join(BASE_DIR, "UCSD_IMM_Log")


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
# Caution: This often appears at the end of configuration file.

STATIC_URL = "/UCSD_IMM_static/" # "s" lower case

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "UCSD_IMM_Static"), # "S" upper case
]

# https://docs.djangoproject.com/en/1.9/howto/static-files/
# http://www.bogotobogo.com/python/Django/Python_Django_Image_Files_Uploading_Example.php
# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home2/media/media.lawrence.com/media/"
MEDIA_ROOT = os.path.join(UCSD_IMM_WORKDIR, 'Media')

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = '/UCSD_IMM_media/'


# Application definition part 1

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders', # https://github.com/ottoyiu/django-cors-headers
    "FileUpload", # UCSD IMM System
    "AccAuth",    # UCSD IMM System
    "CycFileGenChk", # UCSD IMM System
    # "DownloadFileGenChk", # UCSD IMM System
    "UCSD_IMM_ToC",   # UCSD IMM System
    "appBatchAdjust", # UCSD IMM System
    "appStrEncrypt", # UCSD IMM System
    # "appWorkChunkPlanner.apps.AppworkchunkplannerConfig", # UCSD IMM System 
    "appWorkChunkPlanner", # UCSD IMM System
    "appTesting", # UCSD IMM System
]

# Application definition part 2

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware', # https://github.com/ottoyiu/django-cors-headers
    'django.middleware.common.CommonMiddleware', # https://github.com/ottoyiu/django-cors-headers
]

# https://github.com/ottoyiu/django-cors-headers
CORS_ORIGIN_ALLOW_ALL = True

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, UCSD_IMM_DB, 'db.sqlite3'),
    }
}

WSGI_APPLICATION = 'UCSD_IMM_beta4.wsgi.application' # Default

# Taken from http://www.djangocurrent.com/2011/06/django-logging-quickstart-in-django-13.html
# and modified.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s\t%(logver)s\t%(asctime)s\t%(pathname)s\t%(module)s\t%(funcName)s\t%(hostname)s\t%(process)d\t%(username)s\t%(loginuser)s\t%(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'testserv': {                # define and name a handler
            'level': 'DEBUG',
            'class': 'logging.FileHandler', # set the logging class to log to a file
            'formatter': 'verbose',         # define the formatter to associate
            'filename': os.path.join(UCSD_IMM_LOGDIR, "TestServ_log1.txt") # log file
        },

        'prodserv': {                 # define and name a second handler
            'level': 'DEBUG',
            'class': 'logging.FileHandler', # set the logging class to log to a file
            'formatter': 'verbose',         # define the formatter to associate
            'filename': os.path.join(UCSD_IMM_LOGDIR, "ProdServ_log1.txt")  # log file
        },
    },
    'loggers': {
        "testserv_log": {              # define a logger - give it a name
            'handlers': ["testserv"], # specify what handler to associate
            'level': 'INFO',                 # specify the logging level
            'propagate': True,
        },     

        "prodserv_log": {               # define another logger
            'handlers': ["prodserv"],  # associate a different handler
            'level': 'INFO',                 # specify the logging level
            'propagate': True,
        },        
    }       
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media', # for {{ MEDIA_URL }}
                "UCSD_IMM_beta4.context_proc.DIR_UCSD_IMM_WORK", # See context_proc.py
            ],
        },
    },
]

""" UCSD IMM System-specific settings (end) """


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '1(#pdh4^ev5008i!*)bfyf@by_6@%zsvh=lu)v@_^g!66+5t3y'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

ROOT_URLCONF = 'UCSD_IMM_beta4.urls'

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'
TIME_ZONE_THISSERVER = "US/Pacific"

USE_I18N = True

USE_L10N = True

USE_TZ = True





